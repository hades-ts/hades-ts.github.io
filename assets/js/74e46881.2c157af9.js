"use strict";(self.webpackChunk_hades_ts_docs=self.webpackChunk_hades_ts_docs||[]).push([[3402],{4987:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(2155);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},6432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This is a minimal but working bot:","source":"@site/docs/hades/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/docs/hades/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"hades","previous":{"title":"Installation","permalink":"/docs/hades/installation"},"next":{"title":"Client Events","permalink":"/docs/hades/events"}}');var o=t(5723),i=t(4987);const r={},a="Getting Started",c={},d=[{value:"Bot Configuration",id:"bot-configuration",level:2},{value:"Starting the bot",id:"starting-the-bot",level:2},{value:"Listening to Events",id:"listening-to-events",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,o.jsx)(n.p,{children:"This is a minimal but working bot:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { boot, HadesBotService, singleton } from "hades";\n\nexport class BotService extends HadesBotService {\n  async onReady() {\n    console.log(`Logged in as ${this.client.user.username}.`);\n  }\n}\n\nboot(BotService)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"boot"})," function will connect the bot service to Discord."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"BotService.onReady()"})," will be called when the associated Discord.js event is\nfired."]}),"\n",(0,o.jsx)(n.h2,{id:"bot-configuration",children:"Bot Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Add your token and user ID to ",(0,o.jsx)(n.code,{children:"config/default.json"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "discordToken": "your bot token here",\n  "botOwner": "your discord id here"\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"starting-the-bot",children:"Starting the bot"}),"\n",(0,o.jsxs)(n.p,{children:["You can use ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/tsx",children:"tsx"})," to run your script:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"npx tsx src/index.ts\n"})}),"\n",(0,o.jsx)(n.h2,{id:"listening-to-events",children:"Listening to Events"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"onReady"})," method is not the only event handler you can provide:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { boot, HadesBotService, singleton } from \"hades\";\n\nexport class BotService extends HadesBotService {\n  async onReady() {\n    console.log(`Logged in as ${this.client.user.username}.`);\n  }\n\n  async onMessage(message: Message) {\n      if (this.isHighlight(message.content)) {\n        await message.reply('Hello!');\n      }\n  }\n}\n\nboot(BotService)\n"})}),"\n",(0,o.jsx)(n.p,{children:"Now the bot will respond when you highlight it."}),"\n",(0,o.jsx)(n.p,{children:"There are many events that you can handle. The next section shows a listing."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);