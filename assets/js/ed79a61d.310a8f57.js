"use strict";(self.webpackChunk_hades_ts_docs=self.webpackChunk_hades_ts_docs||[]).push([[8322],{158:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var n=t(6393);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return t?n.createElement(f,l(l({ref:r},p),{},{components:t})):n.createElement(f,l({ref:r},p))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4494:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=t(9629),a=(t(6393),t(158));t(4532);const i={},l="Argument Parsers",o={unversionedId:"parsers",id:"parsers",title:"Argument Parsers",description:"By default, arguments are provided as strings.",source:"@site/docs/text-commands/parsers.md",sourceDirName:".",slug:"/parsers",permalink:"/docs/text-commands/parsers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"text-commands",previous:{title:"Arguments",permalink:"/docs/text-commands/arguments"},next:{title:"Argument Validation",permalink:"/docs/text-commands/validation"}},s={},u=[{value:"Built-in Parsers",id:"built-in-parsers",level:2},{value:"Custom Parsers",id:"custom-parsers",level:2}],p={toc:u};function c(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"argument-parsers"},"Argument Parsers"),(0,a.kt)("p",null,"By default, arguments are provided as strings."),(0,a.kt)("p",null,"Argument values can be automatically parsed into other types using the ",(0,a.kt)("inlineCode",{parentName:"p"},"@parser()")," decorator:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@command('squared')\nexport class Squared extends TextCommand {\n\n    @arg()\n    @parser(IntegerParser)\n    input!: number\n\n    async execute() {\n        const square = this.input * this.input;\n        return this.reply(\n            `${this.input} squared is ${square}.`\n        );\n    }\n}\n")),(0,a.kt)("p",null,"If the argument cannot be parsed, a message will be sent to the user reporting the problem."),(0,a.kt)("h2",{id:"built-in-parsers"},"Built-in Parsers"),(0,a.kt)("p",null,"There are a number of built-in parsers available:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ChannelParser"),": a Discord channel"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ChannelIdParser"),": a Discord channel ID"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"FloatParser"),": a floating-point number"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GuildChannelParser"),": a Discord channel of the current Guild"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IntegerParser"),": a integer number"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MemberParser"),": a User of the current Guild"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RoleParser"),": a Role of the current Guild"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RoleIdParser"),": the ID of a Role of the current Guild"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"String"),": any string, the default parser"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"User"),": a Discord user"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"UserId")," a Discord user ID")),(0,a.kt)("h2",{id:"custom-parsers"},"Custom Parsers"),(0,a.kt)("p",null,"You can also implement your own parsers by extending the ",(0,a.kt)("inlineCode",{parentName:"p"},"Parser")," class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@parser()\nexport class YoutubeVideo extends TextArgParser {\n    name = 'youtube video'\n    description = 'A YouTube Video'\n\n    async parse(arg: TextArgInstaller, context: TextCommandContext) {\n        const value = context.reader.getString()\n        const match = value.match(/^([\\w-]{11})(?:\\S+)?$/)\n        if (!match) {\n            throw new TextArgError('Invalid YouTube video ID.')\n        }\n        return new YoutubeVideo(match[1])\n    }\n}\n")),(0,a.kt)("p",null,"If the argument cannot be parsed, a ",(0,a.kt)("inlineCode",{parentName:"p"},"TextArgError"),"  can be thrown."))}c.isMDXComponent=!0},4532:(e,r,t)=>{t(6393)}}]);