"use strict";(self.webpackChunk_hades_ts_docs=self.webpackChunk_hades_ts_docs||[]).push([[5700],{1071:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>d,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"text-commands/index","title":"Text Commands","description":"This package (@hades-ts/text-commands) provides support for traditional \\"text-based parser commands\\".","source":"@site/docs/libs/text-commands/index.md","sourceDirName":"text-commands","slug":"/text-commands/","permalink":"/docs/libs/text-commands/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"libs","previous":{"title":"Argument Validation","permalink":"/docs/libs/slash-commands/validation"},"next":{"title":"Installation","permalink":"/docs/libs/text-commands/installation"}}');var o=s(7282),a=s(4610);const d={},r="Text Commands",c={},i=[];function m(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"text-commands",children:"Text Commands"})}),"\n",(0,o.jsxs)(t.p,{children:["This package (",(0,o.jsx)(t.code,{children:"@hades-ts/text-commands"}),') provides support for traditional "text-based parser commands".']}),"\n",(0,o.jsx)(t.p,{children:"This kind of command was typical before Discord's \"Slash Commands\". It's still used by many bots, and is a good alternative to Slash Commands for some use cases."})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},4610:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>r});var n=s(538);const o={},a=n.createContext(o);function d(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);