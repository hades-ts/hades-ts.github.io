"use strict";(self.webpackChunk_hades_ts_docs=self.webpackChunk_hades_ts_docs||[]).push([[977],{158:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(6393);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,g=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(9629),o=(n(6393),n(158));n(4532);const a={},i="Getting Started",s={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"The basic bot starts with extending HadesBotService:",source:"@site/docs/hades/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/hades/getting-started",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"hades",previous:{title:"Installation",permalink:"/docs/hades/installation"},next:{title:"Events",permalink:"/docs/hades/events"}},c={},l=[{value:"Container Setup",id:"container-setup",level:2},{value:"Writing the Config",id:"writing-the-config",level:2}],d={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"The basic bot starts with extending ",(0,o.kt)("inlineCode",{parentName:"p"},"HadesBotService"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { HadesBotService, singleton } from "hades";\n\n@singleton(BotService)\nexport class BotService extends HadesBotService {\n\n    async onReady() {\n        console.log(`Logged in as ${this.client.user.username}.`);\n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"BotService.onReady()")," will be called when the associated Discord.js event is\nfired and in this case log a message to the console."),(0,o.kt)("p",null,"We're using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@singleton()")," decorator here to bind ",(0,o.kt)("inlineCode",{parentName:"p"},"BotService")," to itself\nwithin the container as a singleton."),(0,o.kt)("h2",{id:"container-setup"},"Container Setup"),(0,o.kt)("p",null,"In our ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts")," we can configure the container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import "reflect-metadata";\n\nimport { HadesContainer } from "hades";\nimport { installTextCommands } from "hades/dist/text-commands";\n\nimport { BotService } from "./services/BotService";\n\nconst container = new HadesContainer();\nconst bot = container.get(BotService);\nbot.login()\n')),(0,o.kt)("p",null,"In order for dependency injection to work, we need to import\n",(0,o.kt)("inlineCode",{parentName:"p"},"reflect-metadata"),". Just a fact of life."),(0,o.kt)("p",null,"After creating the ",(0,o.kt)("inlineCode",{parentName:"p"},"HadesContainer")," we can then request an instance of our\n",(0,o.kt)("inlineCode",{parentName:"p"},"BotService"),"."),(0,o.kt)("p",null,"We can finally login to Discord as the bot."),(0,o.kt)("h2",{id:"writing-the-config"},"Writing the Config"),(0,o.kt)("p",null,"Add your token to ",(0,o.kt)("inlineCode",{parentName:"p"},"config/default.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "discordToken": "your bot token here",\n}\n')),(0,o.kt)("p",null,"That's it. The bot should now boot up and connect to any servers you've added\nit to. Of course it doesn't do anything...yet!"))}p.isMDXComponent=!0},4532:(e,t,n)=>{n(6393)}}]);